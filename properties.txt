@container {
    anchorX: (no) | <number>;
    anchorY: (no) | <number>;
    alignX: left | right | center | justify | even | <number>;
    alignY: top | bottom | center | justify | even | <number>;
    attr: (no) | @value { <name>:<string>; …; };
    border: (no) | <object>, …;
    background: (no) | <object>, …;
    break: yes | (no);
    contained: (yes) | no;
    contentAlignX: (left) | right | center | justify | even | <number>;
    contentAlignY: (top) | bottom | center | justify | even | <number>;
    cursor: no | (auto) | arrow | pointer | help | textX | textY | zoom | zoomIn | zoomOut | move | grab | drop;
    direction: (ltr) | rtl | ttb | btt;
    draggable: yes | (no);
    effects: (no) | <object>;
    flow: (yes) | no;
    font: <object>, …;
    focusable: yes | (no);
    height: <number> | (content);
    isA: <object>, …;
    margin: (no) | [<number>] | <object>, …;
    mask: (no) | <object> | sel();
    next: (auto) | sel() | return;
    on: <object>, …;
    padding: (no) | [<number>] | <object>, …;
    previous: (auto) | sel() | return;
    sandbox: yes | (no);
    selectable: yes | (no);
    shape: <object>;
    speech: (@read) | no;
    targetable: yes | (no);
    text: <object> | [<string>];
    visible: (yes) | no;
    width: <number> | content;
    wrapDirection: (ttb) | btt | rtl | ltr;
    z: <ℤ>;
}

@text {
    alignX: (start) | end | left | right | center | justify | <number>;
    alignY: (baseline) | sup | sub | top | bottom | center | <number>;
    background: (no) | <object>, …;
    border: (no) | <object>, …;
    cursor: no | (auto) | arrow | pointer | help | textX | textY | zoom | zoomIn | zoomOut | move | grab | drop;
    decoration: (no) | [overline] | [underline] | [strike] | <object>, …;
    direction: (ltr) | rtl | ttb | btt;
    font: <object>, …;
    hangingPunctuation: (no) | first | last | end;
    height: <number> | (content);
    indent: <ℕ>;
    lineWrap: (break) | nowrap | preserve | prewrap;
    overflow: (visible) | hidden | <string>;
    margin: (no) | [<number>] | <object>, …;
    padding: (no) | [<number>] | <object>, …;
    selectable: (yes) | no;
    tab: <ℕ>;
    value: no | (content) | <string>;
    tracking: <ℕ>;
    transform: (no) | capitalize | uppercase | lowercase;
    whitespace: (collapse) | preserve;
    width: <number> | (content);
    wordSpacing: <ℕ>;
    wrap: (auto) | breakword | hyphenate;
    wrapDirection: (ttb) | btt | rtl | ltr;
    z: <ℤ>;
}

@font {
    faces: <string>, …;
    size: <ℕ>;
    color: <object>;
    style: (no) | oblique | italic;
    weight: <keyword> | <weight class>;¹
    kerning: (yes) | no;
    fauxBold: yes | (no);
    fauxItalic: yes | (no);
    stretch: (no) | ultraCondensed | extraCondensed | condensed | semiCondensed | semiExpanded | expanded | extraExpanded | ultraExpanded;
    sizeAdjust: <number>;
}

@read {
    read: (content) | <string>;
    mode: (speak) | spell | code | silent;
    translation: (no) | locale | browser | system | user;
}

@window {
    HTTP: ("standard") | "long polling" | "streaming" | <string>;
    icon: <string>, …;
    title: <string> | no;
}

@stroke {
    color: <object>;
    offset: <ℕ> | -<ℕ>;
    position: outside | inside | (center);
    segments: (all) | top | bottom | left | right, …;
    size: <ℕ>;
    style: @dash | dotted | (solid) | wavy;
    z: <ℤ>;
}

@line {
    color: <object>;
    shiftX: <ℕ> | -<ℕ>;
    shiftY: <ℕ> | -<ℕ>;
    size: <ℕ>;
    style: @dash | dotted | (solid) | wavy;
    type: overline | (underline) | strike;
}

¹
    keywords: hairline, thin, ultraLight, extraLight, light, book, (normal), medium, semiBold, bold, extraBold, heavy, black, extraBlack, ultraBlack
    weight classes: 100 (thin), 200 (extralight), 300 (light), 400 (normal), 500 (medium), 600 (semibold), 700 (bold), 800 (heavy), 900 (black)
